-- SPDX-License-Identifier: CC0-1.0
-- vim:syntax=lua:set ts=4 sw=4:
-- Refer to manual: https://knot-resolver.readthedocs.org/en/stable/

-- Network interface configuration
-- net.listen('127.0.0.1', 53, { kind = 'dns' })
-- net.listen('127.0.0.1', 853, { kind = 'tls' })
-- net.listen('127.0.0.1', 8999, {kind = 'control'})

net.listen('130.245.42.183', 53, { kind = 'dns' })
net.listen('130.245.42.183', 853, { kind = 'tls' })
net.listen('130.245.42.183', 8888, { kind = 'control' })

-- net.listen('130.245.52.157', 53, { kind = 'dns' })
-- net.listen('130.245.52.157', 853, { kind = 'tls' })
-- net.listen('130.245.52.157', 8999, {kind = 'control'})

net.listen('::1', 53, { kind = 'dns', freebind = true })
net.listen('::1', 853, { kind = 'tls', freebind = true })

-- Load useful modules
modules = {
	'hints > iterate',  -- Load /etc/hosts and allow custom root hints
	'stats',            -- Track internal statistics
	'predict',          -- Prefetch expiring/frequent records
}


-- Cache size
cache.size = 100 * MB
cache.clear()
domain_rules = {}

function override_TTL(ttl)
        return function(state, req)
                log(ttl)
                req.saved_ttl = ttl
                return state
        end
end

function set_domain_ttl(dom, ttl)
        log('[ttl] setting ' .. dom .. ' TTL ' .. ttl)
	if (domain_rules[dom] ~= nil) then
                policy.del(domain_rules[dom])
        end
        desc = policy.add(policy.suffix(override_TTL(ttl), {todname(dom)}))
	domain_rules[dom] = desc.id
end

log('HELLO')

-- set_domain_ttl("wikipedia.org", 43)

